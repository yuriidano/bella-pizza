generator client {
    provider = "prisma-client-js"  //схему будемо застосовувати для js
}


//вказуємо з якою бд потрібно працювати

datasource bd {
     provider  = "postgresql"
     url       = env("POSTGRES_URL") 
}


//описуємо таблиці
//model це - таблиця

model User {
    id Int @id @default(autoincrement()) //по замовчування при створені нового користувача до id додається +1

    fullName String
    email String
    password String

    role UserRole @default(USER)
    verified DateTime

    provider String?
    providerId String?

    orders Order[]
    cart Cart?
    verificationCode VerificationCode?

    createdAt DateTime @default(now())  // час коли ми створили користувача
    apdatedAt DateTime @updatedAt // час коли користувач був оновлений
}

model Category {
    id Int @id @default(autoincrement())
    name String
    products Product[]

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt 
}

model Product {
    id Int @id @default(autoincrement())

    name String
    imageUrl String
    category Category @relation(fields: [categoryId], references: [id])
    categoryId Int
    ingridient Ingridient[]
    items ProductItem[]

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt 
}


model Ingridient {
    id Int @id @default(autoincrement())

    name String
    price Int
    imageUrl String
    product Product[]
    cartItems CartItem[]

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt 
}

model ProductItem {
    id Int @id @default(autoincrement())

    cartItem CartItem[]

    price Int
    size Int?
    pizzaType Int?

    product Product @relation(fields: [productId], references: [id])
    productId Int
}

model Cart {
    id Int @id @default(autoincrement())

    totalAmount Int @default(0)
    token String

    user User @relation(fields: [userId], references: [id])
    userId Int @unique
    
    catrtItem CartItem[]

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt 
}


model CartItem {
    id Int @id @default(autoincrement())
    quantity Int

    productItem ProductItem @relation(fields: [productItemId], references: [id])
    productItemId Int

    cart Cart @relation(fields: [cartItemId], references: [id])
    cartItemId Int

    ingridients Ingridient[]

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt 
}

model Order {
    id Int @id @default(autoincrement())

    user User @relation(fields: [userId], references: [id])
    userId Int 

    token String

    totalAmount Int

    status OrderStatus
    paymentId String?

    items Json

    fullName String
    email String
    phone String
    adress String
    comment String

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt 
}

model VerificationCode {
    id Int @id @default(autoincrement())

    user User @relation(fields: [userId], references: [id])
    userId Int @unique

    code String @unique

    createdAt DateTime @default(now())  
    @@unique([userId, code])
}

model Room {
    id Int @id @default(autoincrement())

    name String

    window Window?

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt     
}


model Window {
    id Int @id @default(autoincrement())

    name String

    room Room @relation(fields: [roomId], references: [id])
    roomId Int @unique

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt   
}


model Page {
    id Int @id @default(autoincrement())

    name String

    messages Message[]

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt   
}

model Message {
    id Int @id @default(autoincrement())

    name String

    page Page @relation(fields: [pageId], references: [id])
    pageId Int

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt   
}

model Menu {
    id Int @id @default(autoincrement())

    name String

    items Item[]

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt   
}

model Item {
    id Int @id @default(autoincrement())

    name String

    menu Menu[]

    createdAt DateTime @default(now())  
    apdatedAt DateTime @updatedAt   
}











enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    USER
    ADMIN
}